<VirtualHost *:80>
    SetOutputFilter DEFLATE
    ServerAdmin me@antonputra.com
    ServerName apache.antonputra.pvt
    DocumentRoot /data/my-website
</VirtualHost>

Listen 443

<VirtualHost *:443>
    SetOutputFilter DEFLATE
    ServerAdmin me@antonputra.com
    ServerName apache.antonputra.pvt
    DocumentRoot /data/my-website

	SSLEngine On

	Protocols h2 http/1.1
	
    SSLCertificateFile "/etc/ssl/certs/apache-antonputra-pvt.pem"
    SSLCertificateKeyFile "/etc/ssl/private/apache-antonputra-pvt-key.pem"
</VirtualHost>

<VirtualHost *:443>
	ServerName api-apache.antonputra.pvt
	SSLEngine On

	Protocols h2 http/1.1
	
    SSLCertificateFile "/etc/ssl/certs/apache-antonputra-pvt.pem"
    SSLCertificateKeyFile "/etc/ssl/private/apache-antonputra-pvt-key.pem"
	
	ProxyPass /api/devices balancer://myapp/api/devices
   ### Always use it if the backend server performs any redirections, uses absolute URLs, or sets headers like Location or Content-Location
   ### In summary, ProxyPassReverse ensures that the response headers from the backend are adjusted to match the public-facing proxy URL, maintaining seamless access for clients.
    ProxyPassReverse /api/devices balancer://myapp/api/devices

	<Proxy balancer://myapp>
		BalancerMember http://myapp-apache-0.antonputra.pvt:8080
        BalancerMember http://myapp-apache-1.antonputra.pvt:8080
        ProxySet lbmethod=byrequests
	</Proxy>
</VirtualHost>