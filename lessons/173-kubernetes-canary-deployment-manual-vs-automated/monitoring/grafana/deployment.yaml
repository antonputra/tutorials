---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: monitoring
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        runAsUser: 472
      containers:
        - name: grafana
          image: grafana/grafana:10.0.3
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: datasources
              mountPath: "/etc/grafana/provisioning/datasources/datasources.yaml"
              subPath: datasources.yaml
            - name: dashboards
              mountPath: "/etc/grafana/provisioning/dashboards/dashboardproviders.yaml"
              subPath: dashboardproviders.yaml
            - name: dashboard-v1
              mountPath: "/var/lib/grafana/dashboards/kubernetes/dashboard-v1.json"
              subPath: dashboard-v1.json
            - name: dashboard-v2
              mountPath: "/var/lib/grafana/dashboards/kubernetes/dashboard-v2.json"
              subPath: dashboard-v2.json
            - name: flagger-v1
              mountPath: "/var/lib/grafana/dashboards/kubernetes/flagger-v1.json"
              subPath: flagger-v1.json
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana
                  key: admin-password
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: 2000m
              memory: 2Gi
      volumes:
        - name: config
          configMap:
            name: grafana
        - name: datasources
          configMap:
            name: datasources
        - name: dashboards
          configMap:
            name: dashboards
        - name: dashboard-v1
          configMap:
            name: dashboard-v1
        - name: dashboard-v2
          configMap:
            name: dashboard-v2
        - name: flagger-v1
          configMap:
            name: flagger-v1
