apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-test-script
  namespace: performance-test
data:
  test.js: |
    import http from 'k6/http';
    import { check, sleep } from 'k6';

    export const options = {
      stages: [
        { duration: '1m', target: 50 },   // Ramp up to 50 users
        { duration: '3m', target: 50 },   // Stay at 50 users
        { duration: '1m', target: 100 },  // Ramp up to 100 users
        { duration: '3m', target: 100 },  // Stay at 100 users
        { duration: '1m', target: 0 },    // Ramp down to 0 users
      ],
      thresholds: {
        http_req_duration: ['p(95)<500'], // 95% of requests should be below 500ms
      },
    };

    export default function () {
      // Test FastAPI endpoint
      const fastApiResp = http.get('http://fastapi-service:8000/');
      check(fastApiResp, {
        'fastapi status is 200': (r) => r.status === 200,
      });

      // Test Node.js endpoint
      const nodeResp = http.get('http://nodejs-service:3000/');
      check(nodeResp, {
        'nodejs status is 200': (r) => r.status === 200,
      });

      sleep(1);
    } 